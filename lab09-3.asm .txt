%include "in out.asm'
SECTION .data 
msg db "Результат: ",0 
SECTION .text  
global _start  
_start: 
рор есх ; Извлекаем из стека в "есх* количество 
; аргументов (первое значение в стеке) 
pop edx ; Извлекаем из стека в 'edx' имя программы 
; (второе значение в стеке) 
sub ecx,1 ; Уменьшаем "есх° на 1 (количество ; аргументов без названия программы)  
mov esi, 0 ; Используем "esi" для хранения  
; промежуточных сумм 
next: cmp ecx,oh ; проверяем, есть ли еще аргументы  
jz _end ; если аргументов нет выходим из цикла  
; (переход на метку "_end") 
рор еах ; иначе извлекаем следующий аргумент из стека  
call atoi ; преобразуем символ в число 
add esi,eax ; добавляем к промежуточной сумме 
; след. аргумент 'esi=esi+eax’ 
loop next ; переход к обработке следующего аргумента 
-end: 
mov eax, msg ; вывод сообщения "Результат: " 
call sprint 
mov eax, esi ; записываем сумму в регистр 'еах'  
call iprintLF ; печать результата  
call quit ; завершение программы